name: 'Container CI'

on:
  push:
    branches:
      - master
  
  pull_request: # [master, next]
    paths:
      - /

jobs:
  container:
    name: 'Build Container'
    runs-on: ubuntu-latest
    environment: 
      name: staging

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        working-directory: /
        shell: bash

    steps:

    - if: github.event_name == 'push'
      name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v3 
      with:
        token: ${{secrets.github_token}}    
   
    - name: Check Out Repo 
      if: github.event_name == 'push'
      uses: actions/checkout@v2
  
  deployment: 
    runs-on: ubuntu-latest
    environment: 
      name: staging
      
    steps:
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        if: github.event_name == 'push'
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        if: github.event_name == 'push'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: /Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mycryptolistapi:latest #${{ steps.buildnumber.outputs.build_number }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  
  
